#!/usr/bin/env python
"""
Calculator entrypoint
"""

import functools
import operator
import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidgetItem

import supertool.weather_gui
import supertool.weather


class MainApplication(QtWidgets.QMainWindow):
    """

    """

    # def create_table(self):
    #     self.ui.tableWidget = QtWidgets.QTableWidget(self.ui.centralwidget)
    #     sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
    #     sizePolicy.setHorizontalStretch(0)
    #     sizePolicy.setVerticalStretch(1)
    #     sizePolicy.setHeightForWidth(self.ui.tableWidget.sizePolicy().hasHeightForWidth())
    #     self.ui.tableWidget.setSizePolicy(sizePolicy)
    #     self.ui.tableWidget.setMinimumSize(QtCore.QSize(725, 0))
    #     self.ui.tableWidget.setBaseSize(QtCore.QSize(725, 0))
    #     self.ui.tableWidget.setLineWidth(2)
    #     self.ui.tableWidget.setMidLineWidth(1)
    #     self.ui.tableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
    #     self.ui.tableWidget.setAlternatingRowColors(True)
    #     self.ui.tableWidget.setObjectName("tableWidget")
    #     self.ui.tableWidget.setColumnCount(6)
    #     self.ui.tableWidget.setRowCount(0)
    #     item = QtWidgets.QTableWidgetItem()
    #     self.ui.tableWidget.setHorizontalHeaderItem(0, item)
    #     item = QtWidgets.QTableWidgetItem()
    #     self.ui.tableWidget.setHorizontalHeaderItem(1, item)
    #     item = QtWidgets.QTableWidgetItem()
    #     self.ui.tableWidget.setHorizontalHeaderItem(2, item)
    #     item = QtWidgets.QTableWidgetItem()
    #     self.ui.tableWidget.setHorizontalHeaderItem(3, item)
    #     item = QtWidgets.QTableWidgetItem()
    #     self.ui.tableWidget.setHorizontalHeaderItem(4, item)
    #     item = QtWidgets.QTableWidgetItem()
    #     self.ui.tableWidget.setHorizontalHeaderItem(5, item)
    #     self.ui.tableWidget.horizontalHeader().setCascadingSectionResizes(True)
    #     self.ui.tableWidget.horizontalHeader().setDefaultSectionSize(120)
    #     self.ui.tableWidget.horizontalHeader().setHighlightSections(True)
    #     self.ui.tableWidget.verticalHeader().setVisible(False)
    #     self.ui.tableWidget.verticalHeader().setDefaultSectionSize(40)
    #     self.ui.tableWidget.verticalHeader().setHighlightSections(False)
    #     self.ui.tableWidget.verticalHeader().setMinimumSectionSize(40)
    #     self.ui.verticalLayout.addWidget(self.ui.tableWidget)
    #     # self.ui.gridLayout.addLayout(self.ui.verticalLayout, 0, 0, 1, 1)
    #     _translate = QtCore.QCoreApplication.translate
    #     item = self.ui.tableWidget.horizontalHeaderItem(0)
    #     item.setText(_translate("MainWindow", "Date"))
    #     item = self.ui.tableWidget.horizontalHeaderItem(1)
    #     item.setText(_translate("MainWindow", "Description"))
    #     item = self.ui.tableWidget.horizontalHeaderItem(2)
    #     item.setText(_translate("MainWindow", "Humidity, %"))
    #     item = self.ui.tableWidget.horizontalHeaderItem(3)
    #     item.setText(_translate("MainWindow", "Press.,mm Hg"))
    #     item = self.ui.tableWidget.horizontalHeaderItem(4)
    #     item.setText(_translate("MainWindow", "Temp, Â°C"))
    #     item = self.ui.tableWidget.horizontalHeaderItem(5)
    #     item.setText(_translate("MainWindow", "Wind, m/s"))

    def __init__(self):
        super(MainApplication, self).__init__()
        self.ui = supertool.weather_gui.Ui_MainWindow()
        self.ui.setupUi(self)

        self.ui.searchButton.clicked.connect(self.button_clicked)
        self.ui.textEditAddress.selectionChanged.connect(self.text_clicked)
        self.ui.textEditAddress.returnPressed.connect(self.ui.searchButton.click)

        self.flag = 0
        self.ui.textEditAddress.textEdited.connect(self.change_flag)

        self.ui.tableWidgetCurrentWeather.setVisible(False)
        self.ui.tableWidgetForecastWeather.setVisible(False)
        self.ui.labelForecastWeather.setVisible(False)

    def change_flag(self):
        if not self.flag:
            self.flag = 1
            self.ui.textEditAddress.setText(self.ui.textEditAddress.text()[-1])

    def text_clicked(self):
        self.ui.textEditAddress.setText('')

    def button_clicked(self):
        address = self.ui.textEditAddress.text()
        try:
            coordinates = supertool.weather.get_coordinates_by_address(address)
            # print current weather
            msg = coordinates['place']
            cur_we = supertool.weather.get_current_weather_by_coordinates(
                lat=coordinates['lat'],
                lon=coordinates['lon']
            )
            self.ui.tableWidgetCurrentWeather.setVisible(True)
            self.ui.labelCurrentWeather.setVisible(True)
            self.ui.labelCurrentWeather.setText(f'The following place was found on the entered request:\n{msg}\n\nCurrent weather in {msg}:')
            # print future weather
            for_we = supertool.weather.get_weather_forecast_by_coordinates(
                lat=coordinates['lat'],
                lon=coordinates['lon']
            )

            for i, row in enumerate(cur_we.index):
                for j, col in enumerate(for_we.columns.tolist()):
                    self.ui.tableWidgetCurrentWeather.setItem(i, j, QTableWidgetItem(str(cur_we.loc[row, col])))

            ###############################################

            self.ui.tableWidgetForecastWeather.setVisible(True)
            self.ui.labelForecastWeather.setVisible(True)
            self.ui.labelForecastWeather.setText(f'Forecast weather in {msg}:')

            for i, row in enumerate(for_we.index):
                self.ui.tableWidgetForecastWeather.setItem(i, 0, QTableWidgetItem(row))
                for j, col in enumerate(for_we.columns.tolist()):
                    self.ui.tableWidgetForecastWeather.setItem(i, j + 1, QTableWidgetItem(str(for_we.loc[row, col])))

        except LookupError as e:
            self.ui.tableWidgetCurrentWeather.setVisible(False)
            self.ui.tableWidgetForecastWeather.setVisible(False)
            self.ui.labelForecastWeather.setVisible(False)
            self.ui.labelCurrentWeather.setText(str(e))
        finally:
            self.flag = 0


app = QtWidgets.QApplication(sys.argv)
window = MainApplication()
window.show()

sys.exit(app.exec_())
